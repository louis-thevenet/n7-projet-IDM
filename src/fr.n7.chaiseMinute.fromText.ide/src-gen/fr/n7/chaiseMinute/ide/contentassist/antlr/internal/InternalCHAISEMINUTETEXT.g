/*
 * generated by Xtext 2.32.0
 */
grammar InternalCHAISEMINUTETEXT;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.n7.chaiseMinute.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.n7.chaiseMinute.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.n7.chaiseMinute.services.CHAISEMINUTETEXTGrammarAccess;

}
@parser::members {
	private CHAISEMINUTETEXTGrammarAccess grammarAccess;

	public void setGrammarAccess(CHAISEMINUTETEXTGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleChaiseMinute
entryRuleChaiseMinute
:
{ before(grammarAccess.getChaiseMinuteRule()); }
	 ruleChaiseMinute
{ after(grammarAccess.getChaiseMinuteRule()); } 
	 EOF 
;

// Rule ChaiseMinute
ruleChaiseMinute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChaiseMinuteAccess().getGroup()); }
		(rule__ChaiseMinute__Group__0)
		{ after(grammarAccess.getChaiseMinuteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexColumn
entryRuleIndexColumn
:
{ before(grammarAccess.getIndexColumnRule()); }
	 ruleIndexColumn
{ after(grammarAccess.getIndexColumnRule()); } 
	 EOF 
;

// Rule IndexColumn
ruleIndexColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexColumnAccess().getGroup()); }
		(rule__IndexColumn__Group__0)
		{ after(grammarAccess.getIndexColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getAlternatives()); }
		(rule__Column__Alternatives)
		{ after(grammarAccess.getColumnAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnData
entryRuleColumnData
:
{ before(grammarAccess.getColumnDataRule()); }
	 ruleColumnData
{ after(grammarAccess.getColumnDataRule()); } 
	 EOF 
;

// Rule ColumnData
ruleColumnData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnDataAccess().getGroup()); }
		(rule__ColumnData__Group__0)
		{ after(grammarAccess.getColumnDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComputedColumn
entryRuleComputedColumn
:
{ before(grammarAccess.getComputedColumnRule()); }
	 ruleComputedColumn
{ after(grammarAccess.getComputedColumnRule()); } 
	 EOF 
;

// Rule ComputedColumn
ruleComputedColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComputedColumnAccess().getGroup()); }
		(rule__ComputedColumn__Group__0)
		{ after(grammarAccess.getComputedColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportedColumn
entryRuleImportedColumn
:
{ before(grammarAccess.getImportedColumnRule()); }
	 ruleImportedColumn
{ after(grammarAccess.getImportedColumnRule()); } 
	 EOF 
;

// Rule ImportedColumn
ruleImportedColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportedColumnAccess().getGroup()); }
		(rule__ImportedColumn__Group__0)
		{ after(grammarAccess.getImportedColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlgorithm
entryRuleAlgorithm
:
{ before(grammarAccess.getAlgorithmRule()); }
	 ruleAlgorithm
{ after(grammarAccess.getAlgorithmRule()); } 
	 EOF 
;

// Rule Algorithm
ruleAlgorithm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlgorithmAccess().getGroup()); }
		(rule__Algorithm__Group__0)
		{ after(grammarAccess.getAlgorithmAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFunction
entryRuleFunction
:
{ before(grammarAccess.getFunctionRule()); }
	 ruleFunction
{ after(grammarAccess.getFunctionRule()); } 
	 EOF 
;

// Rule Function
ruleFunction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFunctionAccess().getGroup()); }
		(rule__Function__Group__0)
		{ after(grammarAccess.getFunctionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getColumnArgumentParserRuleCall()); }
		ruleColumnArgument
		{ after(grammarAccess.getArgumentAccess().getColumnArgumentParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnArgument
entryRuleColumnArgument
:
{ before(grammarAccess.getColumnArgumentRule()); }
	 ruleColumnArgument
{ after(grammarAccess.getColumnArgumentRule()); } 
	 EOF 
;

// Rule ColumnArgument
ruleColumnArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnArgumentAccess().getGroup()); }
		(rule__ColumnArgument__Group__0)
		{ after(grammarAccess.getColumnArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataType
ruleDataType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getColumnDataParserRuleCall_0()); }
		ruleColumnData
		{ after(grammarAccess.getColumnAccess().getColumnDataParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnAccess().getComputedColumnParserRuleCall_1()); }
		ruleComputedColumn
		{ after(grammarAccess.getColumnAccess().getComputedColumnParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getColumnAccess().getImportedColumnParserRuleCall_2()); }
		ruleImportedColumn
		{ after(grammarAccess.getColumnAccess().getImportedColumnParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0()); }
		('String')
		{ after(grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_1()); }
		('Int')
		{ after(grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group__0__Impl
	rule__ChaiseMinute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getNameAssignment_0()); }
	(rule__ChaiseMinute__NameAssignment_0)
	{ after(grammarAccess.getChaiseMinuteAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group__1__Impl
	rule__ChaiseMinute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getLeftCurlyBracketKeyword_1()); }
	'{'
	{ after(grammarAccess.getChaiseMinuteAccess().getLeftCurlyBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group__2__Impl
	rule__ChaiseMinute__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getGroup_2()); }
	(rule__ChaiseMinute__Group_2__0)?
	{ after(grammarAccess.getChaiseMinuteAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group__3__Impl
	rule__ChaiseMinute__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getRightCurlyBracketKeyword_3()); }
	'}'
	{ after(grammarAccess.getChaiseMinuteAccess().getRightCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getGroup_4()); }
	(rule__ChaiseMinute__Group_4__0)?
	{ after(grammarAccess.getChaiseMinuteAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaiseMinute__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_2__0__Impl
	rule__ChaiseMinute__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getTablesAssignment_2_0()); }
	(rule__ChaiseMinute__TablesAssignment_2_0)
	{ after(grammarAccess.getChaiseMinuteAccess().getTablesAssignment_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getGroup_2_1()); }
	(rule__ChaiseMinute__Group_2_1__0)*
	{ after(grammarAccess.getChaiseMinuteAccess().getGroup_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaiseMinute__Group_2_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_2_1__0__Impl
	rule__ChaiseMinute__Group_2_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_2_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getCommaKeyword_2_1_0()); }
	(',')?
	{ after(grammarAccess.getChaiseMinuteAccess().getCommaKeyword_2_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_2_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_2_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_2_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getTablesAssignment_2_1_1()); }
	(rule__ChaiseMinute__TablesAssignment_2_1_1)
	{ after(grammarAccess.getChaiseMinuteAccess().getTablesAssignment_2_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaiseMinute__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_4__0__Impl
	rule__ChaiseMinute__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getConstrainedKeyword_4_0()); }
	'constrained'
	{ after(grammarAccess.getChaiseMinuteAccess().getConstrainedKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_4__1__Impl
	rule__ChaiseMinute__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getByKeyword_4_1()); }
	'by'
	{ after(grammarAccess.getChaiseMinuteAccess().getByKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_4__2__Impl
	rule__ChaiseMinute__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getConstraintsAssignment_4_2()); }
	(rule__ChaiseMinute__ConstraintsAssignment_4_2)
	{ after(grammarAccess.getChaiseMinuteAccess().getConstraintsAssignment_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getGroup_4_3()); }
	(rule__ChaiseMinute__Group_4_3__0)*
	{ after(grammarAccess.getChaiseMinuteAccess().getGroup_4_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaiseMinute__Group_4_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_4_3__0__Impl
	rule__ChaiseMinute__Group_4_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getCommaKeyword_4_3_0()); }
	','
	{ after(grammarAccess.getChaiseMinuteAccess().getCommaKeyword_4_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_4_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_4_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getConstraintsAssignment_4_3_1()); }
	(rule__ChaiseMinute__ConstraintsAssignment_4_3_1)
	{ after(grammarAccess.getChaiseMinuteAccess().getConstraintsAssignment_4_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_0()); }
	(rule__Table__NameAssignment_0)
	{ after(grammarAccess.getTableAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getIndexedKeyword_1()); }
	'indexed'
	{ after(grammarAccess.getTableAccess().getIndexedKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getOnKeyword_2()); }
	'on'
	{ after(grammarAccess.getTableAccess().getOnKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getIndexcolumnAssignment_3()); }
	(rule__Table__IndexcolumnAssignment_3)
	{ after(grammarAccess.getTableAccess().getIndexcolumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftParenthesisKeyword_4()); }
	'('
	{ after(grammarAccess.getTableAccess().getLeftParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__5__Impl
	rule__Table__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_5()); }
	(rule__Table__Group_5__0)?
	{ after(grammarAccess.getTableAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__6__Impl
	rule__Table__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightParenthesisKeyword_6()); }
	')'
	{ after(grammarAccess.getTableAccess().getRightParenthesisKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_7()); }
	(rule__Table__Group_7__0)?
	{ after(grammarAccess.getTableAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__0__Impl
	rule__Table__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_5_0()); }
	(rule__Table__ColumnsAssignment_5_0)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_5_1()); }
	(rule__Table__Group_5_1__0)*
	{ after(grammarAccess.getTableAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5_1__0__Impl
	rule__Table__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_5_1_0()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_5_1_1()); }
	(rule__Table__ColumnsAssignment_5_1_1)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_7__0__Impl
	rule__Table__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getConstrainedKeyword_7_0()); }
	'constrained'
	{ after(grammarAccess.getTableAccess().getConstrainedKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_7__1__Impl
	rule__Table__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getByKeyword_7_1()); }
	'by'
	{ after(grammarAccess.getTableAccess().getByKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_7__2__Impl
	rule__Table__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getConstraintsAssignment_7_2()); }
	(rule__Table__ConstraintsAssignment_7_2)
	{ after(grammarAccess.getTableAccess().getConstraintsAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_7_3()); }
	(rule__Table__Group_7_3__0)*
	{ after(grammarAccess.getTableAccess().getGroup_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_7_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_7_3__0__Impl
	rule__Table__Group_7_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_7_3_0()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_7_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_7_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_7_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getConstraintsAssignment_7_3_1()); }
	(rule__Table__ConstraintsAssignment_7_3_1)
	{ after(grammarAccess.getTableAccess().getConstraintsAssignment_7_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IndexColumn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexColumn__Group__0__Impl
	rule__IndexColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexColumn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexColumnAccess().getIndexColumnAction_0()); }
	()
	{ after(grammarAccess.getIndexColumnAccess().getIndexColumnAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexColumn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexColumn__Group__1__Impl
	rule__IndexColumn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexColumn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexColumnAccess().getIdAssignment_1()); }
	(rule__IndexColumn__IdAssignment_1)
	{ after(grammarAccess.getIndexColumnAccess().getIdAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexColumn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexColumn__Group__2__Impl
	rule__IndexColumn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexColumn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexColumnAccess().getOfKeyword_2()); }
	'of'
	{ after(grammarAccess.getIndexColumnAccess().getOfKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexColumn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IndexColumn__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexColumn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIndexColumnAccess().getTypeAssignment_3()); }
	(rule__IndexColumn__TypeAssignment_3)
	{ after(grammarAccess.getIndexColumnAccess().getTypeAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnData__Group__0__Impl
	rule__ColumnData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDataAccess().getIdAssignment_0()); }
	(rule__ColumnData__IdAssignment_0)
	{ after(grammarAccess.getColumnDataAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnData__Group__1__Impl
	rule__ColumnData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDataAccess().getOfKeyword_1()); }
	'of'
	{ after(grammarAccess.getColumnDataAccess().getOfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnData__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDataAccess().getTypeAssignment_2()); }
	(rule__ColumnData__TypeAssignment_2)
	{ after(grammarAccess.getColumnDataAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedColumn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__0__Impl
	rule__ComputedColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getIdAssignment_0()); }
	(rule__ComputedColumn__IdAssignment_0)
	{ after(grammarAccess.getComputedColumnAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__1__Impl
	rule__ComputedColumn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getOfKeyword_1()); }
	'of'
	{ after(grammarAccess.getComputedColumnAccess().getOfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__2__Impl
	rule__ComputedColumn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getTypeAssignment_2()); }
	(rule__ComputedColumn__TypeAssignment_2)
	{ after(grammarAccess.getComputedColumnAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__3__Impl
	rule__ComputedColumn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getComputedKeyword_3()); }
	'computed'
	{ after(grammarAccess.getComputedColumnAccess().getComputedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__4__Impl
	rule__ComputedColumn__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getWithKeyword_4()); }
	'with'
	{ after(grammarAccess.getComputedColumnAccess().getWithKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getAlgorithmAssignment_5()); }
	(rule__ComputedColumn__AlgorithmAssignment_5)
	{ after(grammarAccess.getComputedColumnAccess().getAlgorithmAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedColumn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__0__Impl
	rule__ImportedColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getIdAssignment_0()); }
	(rule__ImportedColumn__IdAssignment_0)
	{ after(grammarAccess.getImportedColumnAccess().getIdAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__1__Impl
	rule__ImportedColumn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getOfKeyword_1()); }
	'of'
	{ after(grammarAccess.getImportedColumnAccess().getOfKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__2__Impl
	rule__ImportedColumn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getTypeAssignment_2()); }
	(rule__ImportedColumn__TypeAssignment_2)
	{ after(grammarAccess.getImportedColumnAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__3__Impl
	rule__ImportedColumn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getImportedKeyword_3()); }
	'imported'
	{ after(grammarAccess.getImportedColumnAccess().getImportedKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__4__Impl
	rule__ImportedColumn__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getFromKeyword_4()); }
	'from'
	{ after(grammarAccess.getImportedColumnAccess().getFromKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getPathAssignment_5()); }
	(rule__ImportedColumn__PathAssignment_5)
	{ after(grammarAccess.getImportedColumnAccess().getPathAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__0__Impl
	rule__Algorithm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getAlgorithmAction_0()); }
	()
	{ after(grammarAccess.getAlgorithmAccess().getAlgorithmAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__1__Impl
	rule__Algorithm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getLeftSquareBracketKeyword_1()); }
	'['
	{ after(grammarAccess.getAlgorithmAccess().getLeftSquareBracketKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__2__Impl
	rule__Algorithm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getFunctionsAssignment_2()); }
	(rule__Algorithm__FunctionsAssignment_2)
	{ after(grammarAccess.getAlgorithmAccess().getFunctionsAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__3__Impl
	rule__Algorithm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getGroup_3()); }
	(rule__Algorithm__Group_3__0)?
	{ after(grammarAccess.getAlgorithmAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getRightSquareBracketKeyword_4()); }
	']'
	{ after(grammarAccess.getAlgorithmAccess().getRightSquareBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_3__0__Impl
	rule__Algorithm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getGreaterThanSignKeyword_3_0()); }
	'>'
	{ after(grammarAccess.getAlgorithmAccess().getGreaterThanSignKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getFunctionsAssignment_3_1()); }
	(rule__Algorithm__FunctionsAssignment_3_1)
	{ after(grammarAccess.getAlgorithmAccess().getFunctionsAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__0__Impl
	rule__Function__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
	()
	{ after(grammarAccess.getFunctionAccess().getFunctionAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__1__Impl
	rule__Function__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
	(rule__Function__NameAssignment_1)
	{ after(grammarAccess.getFunctionAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__2__Impl
	rule__Function__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__3__Impl
	rule__Function__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3()); }
	(rule__Function__Group_3__0)?
	{ after(grammarAccess.getFunctionAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__0__Impl
	rule__Function__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getInputsAssignment_3_0()); }
	(rule__Function__InputsAssignment_3_0)
	{ after(grammarAccess.getFunctionAccess().getInputsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getGroup_3_1()); }
	(rule__Function__Group_3_1__0)*
	{ after(grammarAccess.getFunctionAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Function__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__0__Impl
	rule__Function__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Function__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFunctionAccess().getInputsAssignment_3_1_1()); }
	(rule__Function__InputsAssignment_3_1_1)
	{ after(grammarAccess.getFunctionAccess().getInputsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnArgument__Group__0__Impl
	rule__ColumnArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnArgumentAccess().getColumnArgumentAction_0()); }
	()
	{ after(grammarAccess.getColumnArgumentAccess().getColumnArgumentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnArgument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnArgumentAccess().getColumnpathAssignment_1()); }
	(rule__ColumnArgument__ColumnpathAssignment_1)
	{ after(grammarAccess.getColumnArgumentAccess().getColumnpathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaiseMinute__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChaiseMinuteAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getChaiseMinuteAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__TablesAssignment_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_2_0_0()); }
		ruleTable
		{ after(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_2_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__TablesAssignment_2_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_2_1_1_0()); }
		ruleTable
		{ after(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_2_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__ConstraintsAssignment_4_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChaiseMinuteAccess().getConstraintsAlgorithmParserRuleCall_4_2_0()); }
		ruleAlgorithm
		{ after(grammarAccess.getChaiseMinuteAccess().getConstraintsAlgorithmParserRuleCall_4_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__ConstraintsAssignment_4_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChaiseMinuteAccess().getConstraintsAlgorithmParserRuleCall_4_3_1_0()); }
		ruleAlgorithm
		{ after(grammarAccess.getChaiseMinuteAccess().getConstraintsAlgorithmParserRuleCall_4_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getTableAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__IndexcolumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getIndexcolumnIndexColumnParserRuleCall_3_0()); }
		ruleIndexColumn
		{ after(grammarAccess.getTableAccess().getIndexcolumnIndexColumnParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_0_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_1_1_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ConstraintsAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getConstraintsAlgorithmParserRuleCall_7_2_0()); }
		ruleAlgorithm
		{ after(grammarAccess.getTableAccess().getConstraintsAlgorithmParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ConstraintsAssignment_7_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getConstraintsAlgorithmParserRuleCall_7_3_1_0()); }
		ruleAlgorithm
		{ after(grammarAccess.getTableAccess().getConstraintsAlgorithmParserRuleCall_7_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexColumn__IdAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexColumnAccess().getIdIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getIndexColumnAccess().getIdIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IndexColumn__TypeAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIndexColumnAccess().getTypeDataTypeEnumRuleCall_3_0()); }
		ruleDataType
		{ after(grammarAccess.getIndexColumnAccess().getTypeDataTypeEnumRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnDataAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getColumnDataAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnDataAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getColumnDataAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputedColumnAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getComputedColumnAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputedColumnAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getComputedColumnAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__AlgorithmAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputedColumnAccess().getAlgorithmAlgorithmParserRuleCall_5_0()); }
		ruleAlgorithm
		{ after(grammarAccess.getComputedColumnAccess().getAlgorithmAlgorithmParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__IdAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedColumnAccess().getIdIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getImportedColumnAccess().getIdIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedColumnAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getImportedColumnAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__PathAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedColumnAccess().getPathSTRINGTerminalRuleCall_5_0()); }
		RULE_STRING
		{ after(grammarAccess.getImportedColumnAccess().getPathSTRINGTerminalRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__FunctionsAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getFunctionsFunctionParserRuleCall_2_0()); }
		ruleFunction
		{ after(grammarAccess.getAlgorithmAccess().getFunctionsFunctionParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__FunctionsAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getFunctionsFunctionParserRuleCall_3_1_0()); }
		ruleFunction
		{ after(grammarAccess.getAlgorithmAccess().getFunctionsFunctionParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__InputsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getInputsArgumentParserRuleCall_3_0_0()); }
		ruleArgument
		{ after(grammarAccess.getFunctionAccess().getInputsArgumentParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Function__InputsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFunctionAccess().getInputsArgumentParserRuleCall_3_1_1_0()); }
		ruleArgument
		{ after(grammarAccess.getFunctionAccess().getInputsArgumentParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnArgument__ColumnpathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnArgumentAccess().getColumnpathSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getColumnArgumentAccess().getColumnpathSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
