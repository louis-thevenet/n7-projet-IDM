/*
 * generated by Xtext 2.32.0
 */
grammar InternalFromText;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.n7.chaiseMinute.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.n7.chaiseMinute.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.n7.chaiseMinute.services.FromTextGrammarAccess;

}
@parser::members {
	private FromTextGrammarAccess grammarAccess;

	public void setGrammarAccess(FromTextGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleChaiseMinute
entryRuleChaiseMinute
:
{ before(grammarAccess.getChaiseMinuteRule()); }
	 ruleChaiseMinute
{ after(grammarAccess.getChaiseMinuteRule()); } 
	 EOF 
;

// Rule ChaiseMinute
ruleChaiseMinute 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChaiseMinuteAccess().getGroup()); }
		(rule__ChaiseMinute__Group__0)
		{ after(grammarAccess.getChaiseMinuteAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleTable
entryRuleTable
:
{ before(grammarAccess.getTableRule()); }
	 ruleTable
{ after(grammarAccess.getTableRule()); } 
	 EOF 
;

// Rule Table
ruleTable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTableAccess().getGroup()); }
		(rule__Table__Group__0)
		{ after(grammarAccess.getTableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIndexColumn
entryRuleIndexColumn
:
{ before(grammarAccess.getIndexColumnRule()); }
	 ruleIndexColumn
{ after(grammarAccess.getIndexColumnRule()); } 
	 EOF 
;

// Rule IndexColumn
ruleIndexColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIndexColumnAccess().getIndexColumnAction()); }
		()
		{ after(grammarAccess.getIndexColumnAccess().getIndexColumnAction()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getAlternatives()); }
		(rule__Column__Alternatives)
		{ after(grammarAccess.getColumnAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnData
entryRuleColumnData
:
{ before(grammarAccess.getColumnDataRule()); }
	 ruleColumnData
{ after(grammarAccess.getColumnDataRule()); } 
	 EOF 
;

// Rule ColumnData
ruleColumnData 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnDataAccess().getGroup()); }
		(rule__ColumnData__Group__0)
		{ after(grammarAccess.getColumnDataAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleImportedColumn
entryRuleImportedColumn
:
{ before(grammarAccess.getImportedColumnRule()); }
	 ruleImportedColumn
{ after(grammarAccess.getImportedColumnRule()); } 
	 EOF 
;

// Rule ImportedColumn
ruleImportedColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getImportedColumnAccess().getGroup()); }
		(rule__ImportedColumn__Group__0)
		{ after(grammarAccess.getImportedColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleComputedColumn
entryRuleComputedColumn
:
{ before(grammarAccess.getComputedColumnRule()); }
	 ruleComputedColumn
{ after(grammarAccess.getComputedColumnRule()); } 
	 EOF 
;

// Rule ComputedColumn
ruleComputedColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getComputedColumnAccess().getGroup()); }
		(rule__ComputedColumn__Group__0)
		{ after(grammarAccess.getComputedColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnArgument
entryRuleColumnArgument
:
{ before(grammarAccess.getColumnArgumentRule()); }
	 ruleColumnArgument
{ after(grammarAccess.getColumnArgumentRule()); } 
	 EOF 
;

// Rule ColumnArgument
ruleColumnArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnArgumentAccess().getGroup()); }
		(rule__ColumnArgument__Group__0)
		{ after(grammarAccess.getColumnArgumentAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleArgument
entryRuleArgument
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getArgumentAccess().getColumnArgumentParserRuleCall()); }
		ruleColumnArgument
		{ after(grammarAccess.getArgumentAccess().getColumnArgumentParserRuleCall()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlgorithm
entryRuleAlgorithm
:
{ before(grammarAccess.getAlgorithmRule()); }
	 ruleAlgorithm
{ after(grammarAccess.getAlgorithmRule()); } 
	 EOF 
;

// Rule Algorithm
ruleAlgorithm 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlgorithmAccess().getGroup()); }
		(rule__Algorithm__Group__0)
		{ after(grammarAccess.getAlgorithmAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule DataType
ruleDataType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getAlternatives()); }
		(rule__DataType__Alternatives)
		{ after(grammarAccess.getDataTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getColumnDataParserRuleCall_0()); }
		ruleColumnData
		{ after(grammarAccess.getColumnAccess().getColumnDataParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getColumnAccess().getComputedColumnParserRuleCall_1()); }
		ruleComputedColumn
		{ after(grammarAccess.getColumnAccess().getComputedColumnParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getColumnAccess().getImportedColumnParserRuleCall_2()); }
		ruleImportedColumn
		{ after(grammarAccess.getColumnAccess().getImportedColumnParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0()); }
		('String')
		{ after(grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_1()); }
		('Int')
		{ after(grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group__0__Impl
	rule__ChaiseMinute__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getChaiseMinuteAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group__1__Impl
	rule__ChaiseMinute__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getGroup_1()); }
	(rule__ChaiseMinute__Group_1__0)?
	{ after(grammarAccess.getChaiseMinuteAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getRightCurlyBracketKeyword_2()); }
	'}'
	{ after(grammarAccess.getChaiseMinuteAccess().getRightCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaiseMinute__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_1__0__Impl
	rule__ChaiseMinute__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getTablesAssignment_1_0()); }
	(rule__ChaiseMinute__TablesAssignment_1_0)
	{ after(grammarAccess.getChaiseMinuteAccess().getTablesAssignment_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getGroup_1_1()); }
	(rule__ChaiseMinute__Group_1_1__0)*
	{ after(grammarAccess.getChaiseMinuteAccess().getGroup_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaiseMinute__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_1_1__0__Impl
	rule__ChaiseMinute__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getCommaKeyword_1_1_0()); }
	(',')?
	{ after(grammarAccess.getChaiseMinuteAccess().getCommaKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ChaiseMinute__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChaiseMinuteAccess().getTablesAssignment_1_1_1()); }
	(rule__ChaiseMinute__TablesAssignment_1_1_1)
	{ after(grammarAccess.getChaiseMinuteAccess().getTablesAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__0__Impl
	rule__Table__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_0()); }
	'{'
	{ after(grammarAccess.getTableAccess().getLeftCurlyBracketKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__1__Impl
	rule__Table__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getNameAssignment_1()); }
	(rule__Table__NameAssignment_1)
	{ after(grammarAccess.getTableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__2__Impl
	rule__Table__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_2()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__3__Impl
	rule__Table__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getIndexColumnAssignment_3()); }
	(rule__Table__IndexColumnAssignment_3)
	{ after(grammarAccess.getTableAccess().getIndexColumnAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__4__Impl
	rule__Table__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_4()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__5__Impl
	rule__Table__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_5()); }
	(rule__Table__Group_5__0)?
	{ after(grammarAccess.getTableAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getTableAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__0__Impl
	rule__Table__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_5_0()); }
	(rule__Table__ColumnsAssignment_5_0)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getGroup_5_1()); }
	(rule__Table__Group_5_1__0)*
	{ after(grammarAccess.getTableAccess().getGroup_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Table__Group_5_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5_1__0__Impl
	rule__Table__Group_5_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getCommaKeyword_5_1_0()); }
	','
	{ after(grammarAccess.getTableAccess().getCommaKeyword_5_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Table__Group_5_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__Group_5_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getTableAccess().getColumnsAssignment_5_1_1()); }
	(rule__Table__ColumnsAssignment_5_1_1)
	{ after(grammarAccess.getTableAccess().getColumnsAssignment_5_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnData__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnData__Group__0__Impl
	rule__ColumnData__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDataAccess().getDataKeyword_0()); }
	'data'
	{ after(grammarAccess.getColumnDataAccess().getDataKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnData__Group__1__Impl
	rule__ColumnData__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDataAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getColumnDataAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnData__Group__2__Impl
	rule__ColumnData__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDataAccess().getTypeAssignment_2()); }
	(rule__ColumnData__TypeAssignment_2)
	{ after(grammarAccess.getColumnDataAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnData__Group__3__Impl
	rule__ColumnData__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDataAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getColumnDataAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnData__Group__4__Impl
	rule__ColumnData__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDataAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getColumnDataAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnData__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnDataAccess().getIdAssignment_5()); }
	(rule__ColumnData__IdAssignment_5)
	{ after(grammarAccess.getColumnDataAccess().getIdAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ImportedColumn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__0__Impl
	rule__ImportedColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getImportedKeyword_0()); }
	'imported'
	{ after(grammarAccess.getImportedColumnAccess().getImportedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__1__Impl
	rule__ImportedColumn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getImportedColumnAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__2__Impl
	rule__ImportedColumn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getTypeAssignment_2()); }
	(rule__ImportedColumn__TypeAssignment_2)
	{ after(grammarAccess.getImportedColumnAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__3__Impl
	rule__ImportedColumn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getImportedColumnAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__4__Impl
	rule__ImportedColumn__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getImportedColumnAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__5__Impl
	rule__ImportedColumn__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getPathAssignment_5()); }
	(rule__ImportedColumn__PathAssignment_5)
	{ after(grammarAccess.getImportedColumnAccess().getPathAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__6__Impl
	rule__ImportedColumn__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
	'->'
	{ after(grammarAccess.getImportedColumnAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ImportedColumn__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getImportedColumnAccess().getIdAssignment_7()); }
	(rule__ImportedColumn__IdAssignment_7)
	{ after(grammarAccess.getImportedColumnAccess().getIdAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ComputedColumn__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__0__Impl
	rule__ComputedColumn__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getComputedKeyword_0()); }
	'computed'
	{ after(grammarAccess.getComputedColumnAccess().getComputedKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__1__Impl
	rule__ComputedColumn__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getComputedColumnAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__2__Impl
	rule__ComputedColumn__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getTypeAssignment_2()); }
	(rule__ComputedColumn__TypeAssignment_2)
	{ after(grammarAccess.getComputedColumnAccess().getTypeAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__3__Impl
	rule__ComputedColumn__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getRightParenthesisKeyword_3()); }
	')'
	{ after(grammarAccess.getComputedColumnAccess().getRightParenthesisKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__4__Impl
	rule__ComputedColumn__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getColonKeyword_4()); }
	':'
	{ after(grammarAccess.getComputedColumnAccess().getColonKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__5__Impl
	rule__ComputedColumn__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getAlgorithmAssignment_5()); }
	(rule__ComputedColumn__AlgorithmAssignment_5)
	{ after(grammarAccess.getComputedColumnAccess().getAlgorithmAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__6__Impl
	rule__ComputedColumn__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
	'->'
	{ after(grammarAccess.getComputedColumnAccess().getHyphenMinusGreaterThanSignKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ComputedColumn__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getComputedColumnAccess().getIdAssignment_7()); }
	(rule__ComputedColumn__IdAssignment_7)
	{ after(grammarAccess.getComputedColumnAccess().getIdAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ColumnArgument__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnArgument__Group__0__Impl
	rule__ColumnArgument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnArgument__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnArgumentAccess().getColumnArgumentAction_0()); }
	()
	{ after(grammarAccess.getColumnArgumentAccess().getColumnArgumentAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnArgument__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ColumnArgument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnArgument__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnArgumentAccess().getColumnPathAssignment_1()); }
	(rule__ColumnArgument__ColumnPathAssignment_1)
	{ after(grammarAccess.getColumnArgumentAccess().getColumnPathAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__0__Impl
	rule__Algorithm__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getAlgorithmAction_0()); }
	()
	{ after(grammarAccess.getAlgorithmAccess().getAlgorithmAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__1__Impl
	rule__Algorithm__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getFunctionsAssignment_1()); }
	(rule__Algorithm__FunctionsAssignment_1)
	{ after(grammarAccess.getAlgorithmAccess().getFunctionsAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__2__Impl
	rule__Algorithm__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getAlgorithmAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__3__Impl
	rule__Algorithm__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getGroup_3()); }
	(rule__Algorithm__Group_3__0)?
	{ after(grammarAccess.getAlgorithmAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__4__Impl
	rule__Algorithm__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getAlgorithmAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getGroup_5()); }
	(rule__Algorithm__Group_5__0)?
	{ after(grammarAccess.getAlgorithmAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_3__0__Impl
	rule__Algorithm__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getInputsAssignment_3_0()); }
	(rule__Algorithm__InputsAssignment_3_0)
	{ after(grammarAccess.getAlgorithmAccess().getInputsAssignment_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getGroup_3_1()); }
	(rule__Algorithm__Group_3_1__0)*
	{ after(grammarAccess.getAlgorithmAccess().getGroup_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_3_1__0__Impl
	rule__Algorithm__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getCommaKeyword_3_1_0()); }
	','
	{ after(grammarAccess.getAlgorithmAccess().getCommaKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getInputsAssignment_3_1_1()); }
	(rule__Algorithm__InputsAssignment_3_1_1)
	{ after(grammarAccess.getAlgorithmAccess().getInputsAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_5__0__Impl
	rule__Algorithm__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getGreaterThanSignKeyword_5_0()); }
	'>'
	{ after(grammarAccess.getAlgorithmAccess().getGreaterThanSignKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_5__1__Impl
	rule__Algorithm__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getFunctionsAssignment_5_1()); }
	(rule__Algorithm__FunctionsAssignment_5_1)
	{ after(grammarAccess.getAlgorithmAccess().getFunctionsAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_5__2__Impl
	rule__Algorithm__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getLeftParenthesisKeyword_5_2()); }
	'('
	{ after(grammarAccess.getAlgorithmAccess().getLeftParenthesisKeyword_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_5__3__Impl
	rule__Algorithm__Group_5__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getGroup_5_3()); }
	(rule__Algorithm__Group_5_3__0)?
	{ after(grammarAccess.getAlgorithmAccess().getGroup_5_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_5__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getRightParenthesisKeyword_5_4()); }
	')'
	{ after(grammarAccess.getAlgorithmAccess().getRightParenthesisKeyword_5_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group_5_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_5_3__0__Impl
	rule__Algorithm__Group_5_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getInputsAssignment_5_3_0()); }
	(rule__Algorithm__InputsAssignment_5_3_0)
	{ after(grammarAccess.getAlgorithmAccess().getInputsAssignment_5_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_5_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getGroup_5_3_1()); }
	(rule__Algorithm__Group_5_3_1__0)*
	{ after(grammarAccess.getAlgorithmAccess().getGroup_5_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithm__Group_5_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_5_3_1__0__Impl
	rule__Algorithm__Group_5_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getCommaKeyword_5_3_1_0()); }
	','
	{ after(grammarAccess.getAlgorithmAccess().getCommaKeyword_5_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithm__Group_5_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__Group_5_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmAccess().getInputsAssignment_5_3_1_1()); }
	(rule__Algorithm__InputsAssignment_5_3_1_1)
	{ after(grammarAccess.getAlgorithmAccess().getInputsAssignment_5_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ChaiseMinute__TablesAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_1_0_0()); }
		ruleTable
		{ after(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChaiseMinute__TablesAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_1_1_1_0()); }
		ruleTable
		{ after(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getNameEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getTableAccess().getNameEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__IndexColumnAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getIndexColumnIndexColumnParserRuleCall_3_0()); }
		ruleIndexColumn
		{ after(grammarAccess.getTableAccess().getIndexColumnIndexColumnParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_5_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_0_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Table__ColumnsAssignment_5_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_1_1_0()); }
		ruleColumn
		{ after(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnDataAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getColumnDataAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnData__IdAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnDataAccess().getIdEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getColumnDataAccess().getIdEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedColumnAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getImportedColumnAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__PathAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedColumnAccess().getPathEStringParserRuleCall_5_0()); }
		ruleEString
		{ after(grammarAccess.getImportedColumnAccess().getPathEStringParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ImportedColumn__IdAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getImportedColumnAccess().getIdEStringParserRuleCall_7_0()); }
		ruleEString
		{ after(grammarAccess.getImportedColumnAccess().getIdEStringParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__TypeAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputedColumnAccess().getTypeDataTypeEnumRuleCall_2_0()); }
		ruleDataType
		{ after(grammarAccess.getComputedColumnAccess().getTypeDataTypeEnumRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__AlgorithmAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputedColumnAccess().getAlgorithmAlgorithmParserRuleCall_5_0()); }
		ruleAlgorithm
		{ after(grammarAccess.getComputedColumnAccess().getAlgorithmAlgorithmParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ComputedColumn__IdAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getComputedColumnAccess().getIdEStringParserRuleCall_7_0()); }
		ruleEString
		{ after(grammarAccess.getComputedColumnAccess().getIdEStringParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnArgument__ColumnPathAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnArgumentAccess().getColumnPathSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getColumnArgumentAccess().getColumnPathSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__FunctionsAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getFunctionsEStringParserRuleCall_1_0()); }
		ruleEString
		{ after(grammarAccess.getAlgorithmAccess().getFunctionsEStringParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__InputsAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getInputsArgumentParserRuleCall_3_0_0()); }
		ruleArgument
		{ after(grammarAccess.getAlgorithmAccess().getInputsArgumentParserRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__InputsAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getInputsArgumentParserRuleCall_3_1_1_0()); }
		ruleArgument
		{ after(grammarAccess.getAlgorithmAccess().getInputsArgumentParserRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__FunctionsAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getFunctionsEStringParserRuleCall_5_1_0()); }
		ruleEString
		{ after(grammarAccess.getAlgorithmAccess().getFunctionsEStringParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__InputsAssignment_5_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getInputsArgumentParserRuleCall_5_3_0_0()); }
		ruleArgument
		{ after(grammarAccess.getAlgorithmAccess().getInputsArgumentParserRuleCall_5_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithm__InputsAssignment_5_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmAccess().getInputsArgumentParserRuleCall_5_3_1_1_0()); }
		ruleArgument
		{ after(grammarAccess.getAlgorithmAccess().getInputsArgumentParserRuleCall_5_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
