/*
 * generated by Xtext 2.32.0
 */
grammar InternalCHAISEMINUTETEXT;

options {
	superClass=AbstractInternalAntlrParser;
}

@lexer::header {
package fr.n7.chaiseMinute.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package fr.n7.chaiseMinute.parser.antlr.internal;

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import fr.n7.chaiseMinute.services.CHAISEMINUTETEXTGrammarAccess;

}

@parser::members {

 	private CHAISEMINUTETEXTGrammarAccess grammarAccess;

    public InternalCHAISEMINUTETEXTParser(TokenStream input, CHAISEMINUTETEXTGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }

    @Override
    protected String getFirstRuleName() {
    	return "ChaiseMinute";
   	}

   	@Override
   	protected CHAISEMINUTETEXTGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}

}

@rulecatch {
    catch (RecognitionException re) {
        recover(input,re);
        appendSkippedTokens();
    }
}

// Entry rule entryRuleChaiseMinute
entryRuleChaiseMinute returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getChaiseMinuteRule()); }
	iv_ruleChaiseMinute=ruleChaiseMinute
	{ $current=$iv_ruleChaiseMinute.current; }
	EOF;

// Rule ChaiseMinute
ruleChaiseMinute returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getChaiseMinuteAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getChaiseMinuteRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='{'
		{
			newLeafNode(otherlv_1, grammarAccess.getChaiseMinuteAccess().getLeftCurlyBracketKeyword_1());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_2_0_0());
					}
					lv_tables_2_0=ruleTable
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChaiseMinuteRule());
						}
						add(
							$current,
							"tables",
							lv_tables_2_0,
							"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Table");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				(
					otherlv_3=','
					{
						newLeafNode(otherlv_3, grammarAccess.getChaiseMinuteAccess().getCommaKeyword_2_1_0());
					}
				)?
				(
					(
						{
							newCompositeNode(grammarAccess.getChaiseMinuteAccess().getTablesTableParserRuleCall_2_1_1_0());
						}
						lv_tables_4_0=ruleTable
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getChaiseMinuteRule());
							}
							add(
								$current,
								"tables",
								lv_tables_4_0,
								"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Table");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_5='}'
		{
			newLeafNode(otherlv_5, grammarAccess.getChaiseMinuteAccess().getRightCurlyBracketKeyword_3());
		}
		(
			otherlv_6='constrained'
			{
				newLeafNode(otherlv_6, grammarAccess.getChaiseMinuteAccess().getConstrainedKeyword_4_0());
			}
			otherlv_7='by'
			{
				newLeafNode(otherlv_7, grammarAccess.getChaiseMinuteAccess().getByKeyword_4_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getChaiseMinuteAccess().getConstraintsAlgorithmParserRuleCall_4_2_0());
					}
					lv_constraints_8_0=ruleAlgorithm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getChaiseMinuteRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_8_0,
							"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Algorithm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_9=','
				{
					newLeafNode(otherlv_9, grammarAccess.getChaiseMinuteAccess().getCommaKeyword_4_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getChaiseMinuteAccess().getConstraintsAlgorithmParserRuleCall_4_3_1_0());
						}
						lv_constraints_10_0=ruleAlgorithm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getChaiseMinuteRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_10_0,
								"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Algorithm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleTable
entryRuleTable returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getTableRule()); }
	iv_ruleTable=ruleTable
	{ $current=$iv_ruleTable.current; }
	EOF;

// Rule Table
ruleTable returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_name_0_0=RULE_ID
				{
					newLeafNode(lv_name_0_0, grammarAccess.getTableAccess().getNameIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getTableRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='indexed'
		{
			newLeafNode(otherlv_1, grammarAccess.getTableAccess().getIndexedKeyword_1());
		}
		otherlv_2='on'
		{
			newLeafNode(otherlv_2, grammarAccess.getTableAccess().getOnKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getTableAccess().getIndexcolumnIndexColumnParserRuleCall_3_0());
				}
				lv_indexcolumn_3_0=ruleIndexColumn
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getTableRule());
					}
					set(
						$current,
						"indexcolumn",
						lv_indexcolumn_3_0,
						"fr.n7.chaiseMinute.CHAISEMINUTETEXT.IndexColumn");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_4='('
		{
			newLeafNode(otherlv_4, grammarAccess.getTableAccess().getLeftParenthesisKeyword_4());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_0_0());
					}
					lv_columns_5_0=ruleColumn
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						add(
							$current,
							"columns",
							lv_columns_5_0,
							"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Column");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_6=','
				{
					newLeafNode(otherlv_6, grammarAccess.getTableAccess().getCommaKeyword_5_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTableAccess().getColumnsColumnParserRuleCall_5_1_1_0());
						}
						lv_columns_7_0=ruleColumn
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTableRule());
							}
							add(
								$current,
								"columns",
								lv_columns_7_0,
								"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Column");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_8=')'
		{
			newLeafNode(otherlv_8, grammarAccess.getTableAccess().getRightParenthesisKeyword_6());
		}
		(
			otherlv_9='constrained'
			{
				newLeafNode(otherlv_9, grammarAccess.getTableAccess().getConstrainedKeyword_7_0());
			}
			otherlv_10='by'
			{
				newLeafNode(otherlv_10, grammarAccess.getTableAccess().getByKeyword_7_1());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getTableAccess().getConstraintsAlgorithmParserRuleCall_7_2_0());
					}
					lv_constraints_11_0=ruleAlgorithm
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getTableRule());
						}
						add(
							$current,
							"constraints",
							lv_constraints_11_0,
							"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Algorithm");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_12=','
				{
					newLeafNode(otherlv_12, grammarAccess.getTableAccess().getCommaKeyword_7_3_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getTableAccess().getConstraintsAlgorithmParserRuleCall_7_3_1_0());
						}
						lv_constraints_13_0=ruleAlgorithm
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getTableRule());
							}
							add(
								$current,
								"constraints",
								lv_constraints_13_0,
								"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Algorithm");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
	)
;

// Entry rule entryRuleIndexColumn
entryRuleIndexColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getIndexColumnRule()); }
	iv_ruleIndexColumn=ruleIndexColumn
	{ $current=$iv_ruleIndexColumn.current; }
	EOF;

// Rule IndexColumn
ruleIndexColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getIndexColumnAccess().getIndexColumnAction_0(),
					$current);
			}
		)
		(
			(
				lv_id_1_0=RULE_ID
				{
					newLeafNode(lv_id_1_0, grammarAccess.getIndexColumnAccess().getIdIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getIndexColumnRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='of'
		{
			newLeafNode(otherlv_2, grammarAccess.getIndexColumnAccess().getOfKeyword_2());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getIndexColumnAccess().getTypeDataTypeEnumRuleCall_3_0());
				}
				lv_type_3_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getIndexColumnRule());
					}
					set(
						$current,
						"type",
						lv_type_3_0,
						"fr.n7.chaiseMinute.CHAISEMINUTETEXT.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleColumn
entryRuleColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnRule()); }
	iv_ruleColumn=ruleColumn
	{ $current=$iv_ruleColumn.current; }
	EOF;

// Rule Column
ruleColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		{
			newCompositeNode(grammarAccess.getColumnAccess().getColumnDataParserRuleCall_0());
		}
		this_ColumnData_0=ruleColumnData
		{
			$current = $this_ColumnData_0.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColumnAccess().getComputedColumnParserRuleCall_1());
		}
		this_ComputedColumn_1=ruleComputedColumn
		{
			$current = $this_ComputedColumn_1.current;
			afterParserOrEnumRuleCall();
		}
		    |
		{
			newCompositeNode(grammarAccess.getColumnAccess().getImportedColumnParserRuleCall_2());
		}
		this_ImportedColumn_2=ruleImportedColumn
		{
			$current = $this_ImportedColumn_2.current;
			afterParserOrEnumRuleCall();
		}
	)
;

// Entry rule entryRuleColumnData
entryRuleColumnData returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnDataRule()); }
	iv_ruleColumnData=ruleColumnData
	{ $current=$iv_ruleColumnData.current; }
	EOF;

// Rule ColumnData
ruleColumnData returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_ID
				{
					newLeafNode(lv_id_0_0, grammarAccess.getColumnDataAccess().getIdIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColumnDataRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='of'
		{
			newLeafNode(otherlv_1, grammarAccess.getColumnDataAccess().getOfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getColumnDataAccess().getTypeDataTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getColumnDataRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"fr.n7.chaiseMinute.CHAISEMINUTETEXT.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleComputedColumn
entryRuleComputedColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getComputedColumnRule()); }
	iv_ruleComputedColumn=ruleComputedColumn
	{ $current=$iv_ruleComputedColumn.current; }
	EOF;

// Rule ComputedColumn
ruleComputedColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_ID
				{
					newLeafNode(lv_id_0_0, grammarAccess.getComputedColumnAccess().getIdIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getComputedColumnRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='of'
		{
			newLeafNode(otherlv_1, grammarAccess.getComputedColumnAccess().getOfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComputedColumnAccess().getTypeDataTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComputedColumnRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"fr.n7.chaiseMinute.CHAISEMINUTETEXT.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='computed'
		{
			newLeafNode(otherlv_3, grammarAccess.getComputedColumnAccess().getComputedKeyword_3());
		}
		otherlv_4='with'
		{
			newLeafNode(otherlv_4, grammarAccess.getComputedColumnAccess().getWithKeyword_4());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getComputedColumnAccess().getAlgorithmAlgorithmParserRuleCall_5_0());
				}
				lv_algorithm_5_0=ruleAlgorithm
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getComputedColumnRule());
					}
					set(
						$current,
						"algorithm",
						lv_algorithm_5_0,
						"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Algorithm");
					afterParserOrEnumRuleCall();
				}
			)
		)
	)
;

// Entry rule entryRuleImportedColumn
entryRuleImportedColumn returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getImportedColumnRule()); }
	iv_ruleImportedColumn=ruleImportedColumn
	{ $current=$iv_ruleImportedColumn.current; }
	EOF;

// Rule ImportedColumn
ruleImportedColumn returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			(
				lv_id_0_0=RULE_ID
				{
					newLeafNode(lv_id_0_0, grammarAccess.getImportedColumnAccess().getIdIDTerminalRuleCall_0_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedColumnRule());
					}
					setWithLastConsumed(
						$current,
						"id",
						lv_id_0_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_1='of'
		{
			newLeafNode(otherlv_1, grammarAccess.getImportedColumnAccess().getOfKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getImportedColumnAccess().getTypeDataTypeEnumRuleCall_2_0());
				}
				lv_type_2_0=ruleDataType
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getImportedColumnRule());
					}
					set(
						$current,
						"type",
						lv_type_2_0,
						"fr.n7.chaiseMinute.CHAISEMINUTETEXT.DataType");
					afterParserOrEnumRuleCall();
				}
			)
		)
		otherlv_3='imported'
		{
			newLeafNode(otherlv_3, grammarAccess.getImportedColumnAccess().getImportedKeyword_3());
		}
		otherlv_4='from'
		{
			newLeafNode(otherlv_4, grammarAccess.getImportedColumnAccess().getFromKeyword_4());
		}
		(
			(
				lv_path_5_0=RULE_STRING
				{
					newLeafNode(lv_path_5_0, grammarAccess.getImportedColumnAccess().getPathSTRINGTerminalRuleCall_5_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getImportedColumnRule());
					}
					setWithLastConsumed(
						$current,
						"path",
						lv_path_5_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Entry rule entryRuleAlgorithm
entryRuleAlgorithm returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getAlgorithmRule()); }
	iv_ruleAlgorithm=ruleAlgorithm
	{ $current=$iv_ruleAlgorithm.current; }
	EOF;

// Rule Algorithm
ruleAlgorithm returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getAlgorithmAccess().getAlgorithmAction_0(),
					$current);
			}
		)
		otherlv_1='['
		{
			newLeafNode(otherlv_1, grammarAccess.getAlgorithmAccess().getLeftSquareBracketKeyword_1());
		}
		(
			(
				{
					newCompositeNode(grammarAccess.getAlgorithmAccess().getFunctionsFunctionParserRuleCall_2_0());
				}
				lv_functions_2_0=ruleFunction
				{
					if ($current==null) {
						$current = createModelElementForParent(grammarAccess.getAlgorithmRule());
					}
					add(
						$current,
						"functions",
						lv_functions_2_0,
						"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Function");
					afterParserOrEnumRuleCall();
				}
			)
		)
		(
			otherlv_3='>'
			{
				newLeafNode(otherlv_3, grammarAccess.getAlgorithmAccess().getGreaterThanSignKeyword_3_0());
			}
			(
				(
					{
						newCompositeNode(grammarAccess.getAlgorithmAccess().getFunctionsFunctionParserRuleCall_3_1_0());
					}
					lv_functions_4_0=ruleFunction
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getAlgorithmRule());
						}
						add(
							$current,
							"functions",
							lv_functions_4_0,
							"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Function");
						afterParserOrEnumRuleCall();
					}
				)
			)
		)?
		otherlv_5=']'
		{
			newLeafNode(otherlv_5, grammarAccess.getAlgorithmAccess().getRightSquareBracketKeyword_4());
		}
	)
;

// Entry rule entryRuleFunction
entryRuleFunction returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getFunctionRule()); }
	iv_ruleFunction=ruleFunction
	{ $current=$iv_ruleFunction.current; }
	EOF;

// Rule Function
ruleFunction returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getFunctionAccess().getFunctionAction_0(),
					$current);
			}
		)
		(
			(
				lv_name_1_0=RULE_ID
				{
					newLeafNode(lv_name_1_0, grammarAccess.getFunctionAccess().getNameIDTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getFunctionRule());
					}
					setWithLastConsumed(
						$current,
						"name",
						lv_name_1_0,
						"org.eclipse.xtext.common.Terminals.ID");
				}
			)
		)
		otherlv_2='('
		{
			newLeafNode(otherlv_2, grammarAccess.getFunctionAccess().getLeftParenthesisKeyword_2());
		}
		(
			(
				(
					{
						newCompositeNode(grammarAccess.getFunctionAccess().getInputsArgumentParserRuleCall_3_0_0());
					}
					lv_inputs_3_0=ruleArgument
					{
						if ($current==null) {
							$current = createModelElementForParent(grammarAccess.getFunctionRule());
						}
						add(
							$current,
							"inputs",
							lv_inputs_3_0,
							"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Argument");
						afterParserOrEnumRuleCall();
					}
				)
			)
			(
				otherlv_4=','
				{
					newLeafNode(otherlv_4, grammarAccess.getFunctionAccess().getCommaKeyword_3_1_0());
				}
				(
					(
						{
							newCompositeNode(grammarAccess.getFunctionAccess().getInputsArgumentParserRuleCall_3_1_1_0());
						}
						lv_inputs_5_0=ruleArgument
						{
							if ($current==null) {
								$current = createModelElementForParent(grammarAccess.getFunctionRule());
							}
							add(
								$current,
								"inputs",
								lv_inputs_5_0,
								"fr.n7.chaiseMinute.CHAISEMINUTETEXT.Argument");
							afterParserOrEnumRuleCall();
						}
					)
				)
			)*
		)?
		otherlv_6=')'
		{
			newLeafNode(otherlv_6, grammarAccess.getFunctionAccess().getRightParenthesisKeyword_4());
		}
	)
;

// Entry rule entryRuleArgument
entryRuleArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getArgumentRule()); }
	iv_ruleArgument=ruleArgument
	{ $current=$iv_ruleArgument.current; }
	EOF;

// Rule Argument
ruleArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	{
		newCompositeNode(grammarAccess.getArgumentAccess().getColumnArgumentParserRuleCall());
	}
	this_ColumnArgument_0=ruleColumnArgument
	{
		$current = $this_ColumnArgument_0.current;
		afterParserOrEnumRuleCall();
	}
;

// Entry rule entryRuleColumnArgument
entryRuleColumnArgument returns [EObject current=null]:
	{ newCompositeNode(grammarAccess.getColumnArgumentRule()); }
	iv_ruleColumnArgument=ruleColumnArgument
	{ $current=$iv_ruleColumnArgument.current; }
	EOF;

// Rule ColumnArgument
ruleColumnArgument returns [EObject current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			{
				$current = forceCreateModelElement(
					grammarAccess.getColumnArgumentAccess().getColumnArgumentAction_0(),
					$current);
			}
		)
		(
			(
				lv_columnpath_1_0=RULE_STRING
				{
					newLeafNode(lv_columnpath_1_0, grammarAccess.getColumnArgumentAccess().getColumnpathSTRINGTerminalRuleCall_1_0());
				}
				{
					if ($current==null) {
						$current = createModelElement(grammarAccess.getColumnArgumentRule());
					}
					setWithLastConsumed(
						$current,
						"columnpath",
						lv_columnpath_1_0,
						"org.eclipse.xtext.common.Terminals.STRING");
				}
			)
		)
	)
;

// Rule DataType
ruleDataType returns [Enumerator current=null]
@init {
	enterRule();
}
@after {
	leaveRule();
}:
	(
		(
			enumLiteral_0='String'
			{
				$current = grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_0, grammarAccess.getDataTypeAccess().getStringEnumLiteralDeclaration_0());
			}
		)
		    |
		(
			enumLiteral_1='Int'
			{
				$current = grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
				newLeafNode(enumLiteral_1, grammarAccess.getDataTypeAccess().getIntEnumLiteralDeclaration_1());
			}
		)
	)
;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
