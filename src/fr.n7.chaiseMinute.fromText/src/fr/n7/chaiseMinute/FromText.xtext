// automatically generated by Xtext
grammar fr.n7.chaiseMinute.FromText with org.eclipse.xtext.common.Terminals

import "http://chaiseMinute" 
import "http://www.eclipse.org/emf/2002/Ecore" as ecore
import "http://algorithm" as algorithm

ChaiseMinute returns ChaiseMinute:
	'{'
		(tables+=Table ( ','? tables+=Table)* )?
	'}';

Table returns Table:
	
	'{'
	name=EString ','
	indexColumn=IndexColumn ','
	(columns+=Column ( "," columns+=Column)* )?
		
	'}';

IndexColumn returns IndexColumn:
	{IndexColumn}
	;

Column returns Column:
	ColumnData | ComputedColumn | ImportedColumn;


enum DataType returns DataType:
				String = 'String' | Int = 'Int';


ColumnData returns ColumnData:
	'data' '(' type=DataType ')' ':' id=EString
	;

ImportedColumn returns ImportedColumn:
	'imported' '(' type=DataType ')' ':'	
	path=EString
	'->'
	id=EString
	;

ComputedColumn returns ComputedColumn:
	'computed'
	'('
	type=DataType
	')'
	':'
	algorithm=Algorithm
	'->'
	id=EString
	;

ColumnArgument returns algorithm::ColumnArgument:
	{algorithm::ColumnArgument}
	columnPath=STRING
	;
	
Argument returns algorithm::Argument:
	ColumnArgument
	;



Algorithm returns algorithm::Algorithm:
	{algorithm::Algorithm}
	functions+=Function
	'('
		(inputs+=Argument ( "," inputs+=Argument)*)?
	')'
	(
		'>'
		functions+=Function
		'('
		(inputs+=Argument ( "," inputs+=Argument)*)?
		')' 
	)?
		;

Operation returns algorithm::Operation:
	Sum|Feur;

Sum returns algorithm::Sum:
	{algorithm::Sum}
	'Sum'
	;
	
Feur returns algorithm::Feur:
	{algorithm::Feur}
	'Feur'
	;

Function returns algorithm::Function:
	{algorithm::Function}
	operation=Operation
	
		;



EInt returns ecore::EInt:
	'-'? INT;
	
	

EString returns ecore::EString:
	STRING | ID;
	
